# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $mod2 Mod1

# disable window titlebars and set no window border
for_window [class=".*"] border pixel 0

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Sarasa Mono 14

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:Sarasa Mono 14

# gaps settings
gaps inner 8

#=================
# auto start
#=================

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec xset s 300 5
exec xss-lock -n /usr/lib/xsecurelock/dimmer -l -- xsecurelock

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id picom --config ~/.config/picom/picom.conf &
exec --no-startup-id nm-applet &
exec --no-startup-id blueman-applet &

exec --no-startup-id fcitx5 &

exec_always --no-startup-id clipcatd &

exec --no-startup-id udiskie --tray &
exec --no-startup-id feh --bg-max ~/Pictures/wallpaper/u49cjyw80ty61-scaled.jpg &
exec --no-startup-id dunst &

# special programs settings
for_window [class="GoldenDict"] floating enable border normal 2
for_window [class="Xarchiver"] floating enable border normal 2
for_window [instance="dosbox"] floating enable border normal 2
for_window [instance="speedcrunch"] floating enable border normal 2
for_window [window_role="pop-up"] floating enable border normal 2
for_window [window_role="task_dialog"] floating enable border normal 2
for_window [window_role="Dialog"] floating enable border normal 2
for_window [window_role="About"] floating enable border normal 2
for_window [window_role="GtkFileChooserDialog"] floating enable border normal 2
for_window [window_role="Organizer"] floating enable border normal 2  # firefox library
for_window [window_role=floating_term] floating enable

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Shift+Return exec i3-sensible-terminal --role floating_term

# Dropdown Terminal
for_window [title="dropdown-terminal"] floating enable
for_window [title="dropdown-terminal"] resize set 1500 700
for_window [title="dropdown-terminal"] move scratchpad
for_window [title="dropdown-terminal"] border pixel 3
bindsym $mod+u [instance=termite] scratchpad show; move position center
bindsym $mod+Shift+u exec i3-sensible-terminal --title 'dropdown-terminal'


bindsym $mod+m exec emacs

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
bindsym $mod+d exec --no-startup-id rofi -show drun
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# Use rofi and clipcat(https://github.com/xrelkd/clipcat) to manage X.org clipboard
bindsym $mod2+grave exec clipcat-menu

#===================
# key bindings
#===================

# screenshot and screen record
bindsym --release Print exec --no-startup-id shot-active
bindsym --release Control+Print exec --no-startup-id shot-select
bindsym --release $mod+Print exec --no-startup-id shot-fullscreen

bindsym --release Shift+Print exec --no-startup-id record
bindsym --release Control+Shift+Print exec killall ffmpeg

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# Show scratchpad in rofi
bindsym $mod+o exec --no-startup-id i3-show-scratchpad-windows

bindsym $mod+Tab mode "Cycle scratchpad"; scratchpad show
mode "Cycle scratchpad"{
  bindsym $mod+Tab scratchpad show; scratchpad show
  bindsym Return mode "default"
  bindsym Escape mode "default"
}

set $Locker ~/.config/i3/autolock/xsetlock && sleep 1

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+BackSpace mode "$mode_system"

## Manual management of external displays
# Set the shortcuts and what they do
set $mode_display Ext Screen (d) DP-1 ON, (f) DP-2 ON, (g) DP-3 ON, (x) DP-1 OFF, (c) DP-2 OFF, (v) DP-3 OFF
mode "$mode_display" {
    bindsym d exec --no-startup-id xrandr --output DP-1 --auto --right-of eDP-1, mode "default"
    bindsym f exec --no-startup-id xrandr --output DP-2 --auto --right-of eDP-1, mode "default"
    bindsym g exec --no-startup-id xrandr --output DP-3 --auto --right-of eDP-1, mode "default"

    bindsym x exec --no-startup-id xrandr --output DP-1 --auto --off, mode "default"
    bindsym c exec --no-startup-id xrandr --output DP-2 --auto --off, mode "default"
    bindsym v exec --no-startup-id xrandr --output DP-3 --auto --off, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Declare here the shortcut to bring the display selection menu
bindsym $mod+x mode "$mode_display"

# Duplicate screen for external displays
set $clone_display Clone Screen (d) DP-1 ON, (f) DP-2 ON, (g) DP-3 ON, (x) DP-1 OFF, (c) DP-2 OFF, (v) DP-3 OFF
mode "$clone_display" {
    bindsym d exec --no-startup-id xrandr --output DP-1 --auto --same-as eDP-1 --right-of eDP-1, mode "default"
    bindsym f exec --no-startup-id xrandr --output DP-2 --auto --same-as eDP-1 --right-of eDP-1, mode "default"
    bindsym g exec --no-startup-id xrandr --output DP-3 --auto --same-as eDP-1 --right-of eDP-1, mode "default"

    bindsym x exec --no-startup-id xrandr --output DP-1 --auto --off, mode "default"
    bindsym c exec --no-startup-id xrandr --output DP-2 --auto --off, mode "default"
    bindsym v exec --no-startup-id xrandr --output DP-3 --auto --off, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+c mode "$clone_display"

# Move current workspace to right external output
bindsym $mod+p move workspace to output right

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

#===================
# i3bar
#===================

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
set $i3pyblocks ~/.config/i3pyblocks
bar {
        position top
        font pango: DejaVu Sans Mono, FontAwesome 13
        # status_command i3status-rs ~/.config/i3status-rust/config.toml
        status_command $i3pyblocks/venv/bin/i3pyblocks -c $i3pyblocks/config.py
        # status_command i3status

        colors {
            separator #666666
            background #2e3440
            statusline #dddddd
            focused_workspace #5e81ac #5e81ac #ffffff
            active_workspace #333333 #333333 #ffffff
            inactive_workspace #333333 #333333 #888888
            urgent_workspace #2f343a #900000 #ffffff
        }
}
# Review the lines below and append to ~/.config/i3/config

## Volume control

# Path to volume control, without trailing slash
set $volumepath ~/.config/i3/i3-volume

# Command for the status line
#   ie: i3blocks, i3status
set $statuscmd i3status

# Signal used to update the status line
#   i3blocks uses SIGRTMIN+10 by default
#   i3status uses SIGUSR1 by default
set $statussig SIGUSR1

# Amount to increase/decrease volume as a percentage
set $volumestep 5

# pulseaudio-utils settings
#
# Symbolic name for sink (numeric index not supported)
#   Recommended: comment out this setting and omit the -s option to use default sink
#   List sink names: pacmd list-sinks | awk -F "[<>]" '/^\s+name: <.*>/{print $2}'
#set $sinkname alsa_output.pci-0000_00_1b.0.analog-stereo

# Using pulseaudio-utils (append "-s $sinkname" without quotes to override default sink)
bindsym XF86AudioRaiseVolume exec --no-startup-id $volumepath/volume -n -t $statuscmd -u $statussig up $volumestep -y -N dunst
bindsym XF86AudioLowerVolume exec --no-startup-id $volumepath/volume -n -t $statuscmd -u $statussig down $volumestep -y -N dunst
bindsym XF86AudioMute        exec --no-startup-id $volumepath/volume -n -t $statuscmd -u $statussig mute -y -N dunst

bindsym XF86MonBrightnessUp exec  --no-startup-id light -A 5 # increase screen brightness
bindsym XF86MonBrightnessDown exec  --no-startup-id light -U 5 # decrease screen brightness
