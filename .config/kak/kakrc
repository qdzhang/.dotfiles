# Set the colour scheme
colorscheme one-dark

# Width of a tab
set-option global tabstop 4

# Indent with 4 spaces
set-option global indentwidth 4

# Always keep one line and three columns displayed around the cursor
set-option global scrolloff 1,3

# Display the status bar on top
# set-option global ui_options ncurses_status_on_top=true

# Display line numbers
add-highlighter global/ number-lines -hlcursor -relative

# Highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# Softwrap long lines
add-highlighter global/ wrap -word -indent

# Clipboard management mappings
map -docstring "yank the selection into the clipboard" global user y '<a-|>xclip -i -selection clipboard<ret>'
map -docstring "paste the content from clipboard" global user p '!xclip -selection clipboard -o<ret>'

# Shortcut to quickly exit the editor
define-command -docstring "save and quit" x "write-all; quit"

# kak-lsp config
eval %sh{kak-lsp --kakoune -s $kak_session}  # Not needed if you load it with plug.kak.
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
    lsp-enable-window
}
map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

# Auto-pairs plugin
set-option global auto_pairs ( ) { } [ ] '"' '"' "'" "'" ` ` “ ” ‘ ’ « » ‹ ›
hook global WinDisplay .* enable-auto-pairs

# Manage kak buffers
map global user b ':enter-buffers-mode<ret>'              -docstring 'buffers…'
map global user B ':enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'

hook global WinDisplay .* info-buffers

alias global bd delete-buffer
alias global bf buffer-first
alias global bl buffer-last
alias global bo buffer-only
alias global bo! buffer-only-force

# Config lua
require-module luar
# use luajit to run all Lua snippets
set-option global luar_interpreter luajit

require-module peneira
map global user f ':peneira-files<ret>' -docstring 'fuzzy files'
map global user l ':peneira-lines<ret>' -docstring 'fuzzy lines'
